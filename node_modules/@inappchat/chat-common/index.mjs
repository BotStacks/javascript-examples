var v = /* @__PURE__ */ ((r) => (r.Audio = "audio", r.File = "file", r.Image = "image", r.Location = "location", r.Vcard = "vcard", r.Video = "video", r))(v || {}), l = /* @__PURE__ */ ((r) => (r.Conversation = "Conversation", r.DirectMessage = "DirectMessage", r.Group = "Group", r.Thread = "Thread", r))(l || {}), I = /* @__PURE__ */ ((r) => (r.Chat = "Chat", r.Device = "Device", r.Message = "Message", r.User = "User", r))(I || {}), w = /* @__PURE__ */ ((r) => (r.Android = "ANDROID", r.Ios = "IOS", r.Web = "WEB", r))(w || {}), g = /* @__PURE__ */ ((r) => (r.Create = "Create", r.Update = "Update", r))(g || {}), m = /* @__PURE__ */ ((r) => (r.Approved = "Approved", r.Rejected = "Rejected", r))(m || {}), u = /* @__PURE__ */ ((r) => (r.Admin = "Admin", r.Invited = "Invited", r.Kicked = "Kicked", r.Member = "Member", r.Owner = "Owner", r.RejectedInvite = "RejectedInvite", r))(u || {}), O = /* @__PURE__ */ ((r) => (r.Away = "Away", r.Dnd = "DND", r.Offline = "Offline", r.Online = "Online", r))(O || {}), p = /* @__PURE__ */ ((r) => (r.Default = "Default", r.UserJoined = "UserJoined", r.UserLeft = "UserLeft", r))(p || {}), A = /* @__PURE__ */ ((r) => (r.Admin = "Admin", r.Member = "Member", r.Moderator = "Moderator", r.Owner = "Owner", r))(A || {});
function D(r) {
  return r ? r.split(";").map((n) => {
    const [e, i] = n.split(":");
    return [e, i.split(",")];
  }) : [];
}
function j(r, n) {
  return r.findIndex((e) => e[1].includes(n));
}
function M(r) {
  return r.map(([n, e]) => `${n}:${e.join(",")}`).join(";");
}
function o(r, n, e) {
  const i = r.find((d) => d[0] === e);
  i ? i[1].push(n) : r.push([e, [n]]);
}
function t(r, n, e) {
  r[n][1] = r[n][1].filter((i) => i !== e), r[n][1].length || r.splice(n, 1);
}
function U(r, n, e) {
  const i = j(e, r);
  return i > -1 ? n === e[i][0] ? (t(e, i, r), "delete") : (t(e, i, r), o(e, r, n), "change") : (o(e, r, n), "add");
}
function h(r) {
  if (!r)
    return !1;
  switch (r) {
    case u.Admin:
    case u.Member:
    case u.Owner:
      return !0;
  }
  return !1;
}
function x(r, n) {
  const e = [], i = /\B@(\w+)/g;
  let d;
  for (; (d = i.exec(r)) !== null; ) {
    const s = d[1], a = d.index + 1, f = n.find((c) => c.username === s);
    if (f)
      e.push({ username: s, offset: a, user_id: f.id });
    else
      continue;
  }
  return e;
}
export {
  v as AttachmentType,
  l as ChatType,
  I as DeleteEntity,
  w as DeviceType,
  g as EntityEventType,
  m as FlagReviewStatus,
  u as MemberRole,
  O as OnlineStatus,
  p as SystemMessageType,
  A as TenantUserRole,
  j as findUserReactionIndex,
  h as isMember,
  x as parseMentions,
  D as parseReactions,
  U as react,
  M as serializeReactions
};
